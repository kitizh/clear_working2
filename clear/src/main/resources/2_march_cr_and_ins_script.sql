DROP TRIGGER IF EXISTS trigger_update_stock_amount ON order_items CASCADE; 
DROP TRIGGER IF EXISTS trigger_update_total_amount ON order_items CASCADE;
DROP FUNCTION IF EXISTS update_total_amount(); 
DROP FUNCTION IF EXISTS update_stock_amount();
DROP TABLE IF EXISTS order_items CASCADE;
DROP TABLE IF EXISTS orders CASCADE;
DROP TABLE IF EXISTS users CASCADE;
DROP TABLE IF EXISTS access_types CASCADE;
DROP TABLE IF EXISTS recipe CASCADE;
DROP TABLE IF EXISTS stock CASCADE;
DROP TABLE IF EXISTS all_items CASCADE;
DROP TABLE IF EXISTS menu CASCADE;
DROP TABLE IF EXISTS all_tables CASCADE;
DROP TABLE IF EXISTS reservations CASCADE;
DROP TABLE IF EXISTS services CASCADE;
DROP TABLE IF EXISTS reserved_services CASCADE;



-- Таблица со столиками
CREATE TABLE all_tables (
    id INT PRIMARY KEY,       -- Номер столика
    seats INT NOT NULL        -- Количество мест
);

-- Таблица меню
CREATE TABLE menu (
    menu_id SERIAL PRIMARY KEY,
    dish_name VARCHAR(100) NOT NULL,
	description TEXT default '-',
    price INT default 0,
    menu_type VARCHAR(50) NOT NULL
);

-- Таблица для всех продуктов (ингредиенты, мясо, овощи и т.д.)
CREATE TABLE all_items (
    item_id SERIAL PRIMARY KEY,
    item_name VARCHAR(100) NOT NULL,
    product_type VARCHAR(50) NOT NULL
);


-- Таблица для хранения запасов
CREATE TABLE stock (
    stock_id SERIAL PRIMARY KEY,
    item_id INT REFERENCES all_items(item_id) ON DELETE CASCADE,
    amount NUMERIC(10, 2) NOT NULL
);

-- Таблица для хранения рецептов
CREATE TABLE recipe (
    recipe_id SERIAL PRIMARY KEY,
    menu_id INT REFERENCES menu(menu_id) ON DELETE CASCADE,
    item_id INT REFERENCES all_items(item_id) ON DELETE CASCADE,
    amount NUMERIC(10, 2) NOT NULL
);

-- Таблица уровней доступа
CREATE TABLE access_types (
    access_type_id SERIAL PRIMARY KEY,
    access_name VARCHAR(50) NOT NULL UNIQUE,
    description TEXT
);

-- Таблица пользователей
CREATE TABLE users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL UNIQUE,
    password_hash TEXT NOT NULL,
    access_type_id INT REFERENCES access_types(access_type_id) ON DELETE SET NULL
);

-- Таблица заказов (внешний ключ на all_tables)
CREATE TABLE orders (
    order_id SERIAL PRIMARY KEY,
    order_date DATE DEFAULT CURRENT_DATE,   -- Дата заказа
    order_time TIME DEFAULT CURRENT_TIME,     -- Время заказа
    table_number INT REFERENCES all_tables(id) ON DELETE SET NULL,
    total_amount INT DEFAULT 0,
    status VARCHAR(10) DEFAULT 'Принят' CHECK (status in ('Принят', 'Завершен', 'Оплачен')),
    description TEXT DEFAULT '-'
);

-- Таблица элементов заказа (связь с заказами и меню)
CREATE TABLE order_items (
    order_item_id SERIAL PRIMARY KEY,
    order_id INT REFERENCES orders(order_id) ON DELETE CASCADE,
    menu_id INT REFERENCES menu(menu_id) ON DELETE CASCADE,
    description TEXT DEFAULT '-'
);

-- Таблица для бронирований
CREATE TABLE reservations (
    id SERIAL PRIMARY KEY,
    reservation_date DATE NOT NULL,    -- Дата бронирования
    reservation_time TIME NOT NULL,      -- Время бронирования
    name VARCHAR(50) NOT NULL,          -- Имя, на кого зарезервировано
    phone_number VARCHAR(20) NOT NULL,   -- Номер телефона
    table_id INT REFERENCES all_tables(id) ON DELETE SET NULL  -- Привязка брони к конкретному столу
);

-- Таблица для дополнительных услуг
CREATE TABLE services (
    id SERIAL PRIMARY KEY,
    service_name VARCHAR(100) NOT NULL,    -- Название услуги
    description TEXT NOT NULL              -- Описание услуги
);

-- Таблица для связи бронирования и услуг
CREATE TABLE reserved_services (
    id SERIAL PRIMARY KEY,
    reservation_id INT REFERENCES reservations(id) ON DELETE CASCADE,  -- ID брони
    service_id INT REFERENCES services(id) ON DELETE CASCADE            -- ID услуги
);


INSERT INTO all_tables (id, seats) VALUES
(0, 0),  -- на вынос
(1, 4),
(2, 2),
(3, 6),
(4, 4),
(5, 8);


INSERT INTO menu (dish_name, description, price, menu_type)
VALUES
    -- Итальянская кухня
    ('Пицца 4 сыра', 'Пицца с четырьмя видами сыра: моцарелла, горгонзола, пармезан, эмменталь', 690, 'Итальянская кухня'),
    ('Пицца Диабло', 'Острая пицца с соусом чили, пепперони и сыром', 720, 'Итальянская кухня'),
    ('Паста Карбонара', 'Спагетти с беконом, сливочным соусом и сыром пармезан', 550, 'Итальянская кухня'),
    ('Лазанья Классическая', 'Листы пасты, соус Болоньезе, сыр и соус бешамель', 650, 'Итальянская кухня'),
    ('Ризотто с грибами', 'Кремовый ризотто с белыми грибами и пармезаном', 480, 'Итальянская кухня'),

    -- Японская кухня
    ('Ролл Калифорния', 'Ролл с крабом, авокадо и огурцом, обсыпан икрой тобико', 420, 'Японская кухня'),
    ('Ролл Филадельфия', 'Ролл с лососем, сливочным сыром и авокадо', 450, 'Японская кухня'),
    ('Суши с тунцом', 'Классическая суши с тунцом и рисом', 120, 'Японская кухня'),
    ('Суши с лососем', 'Классическая суши с лососем и рисом', 130, 'Японская кухня'),
    ('Рамен с курицей', 'Сытный бульон с пшеничной лапшой, курицей и яйцом', 390, 'Японская кухня'),

    -- Завтраки
    ('Омлет с ветчиной и сыром', 'Пышный омлет с добавлением ветчины и сыра', 210, 'Завтраки'),
    ('Блинчики с творогом', 'Тонкие блинчики с нежной творожной начинкой', 180, 'Завтраки'),
    ('Сырники со сметаной', 'Классические сырники из творога, подаются со сметаной и вареньем', 220, 'Завтраки'),
    ('Овсяная каша', 'Овсянка на молоке с ягодами и мёдом', 150, 'Завтраки'),
    ('Яичница с беконом', 'Два яйца, обжаренные с ломтиками бекона', 230, 'Завтраки'),

    -- Салаты
    ('Салат Цезарь', 'Листья романо, курица, сухарики, соус Цезарь, пармезан', 320, 'Салаты'),
    ('Греческий салат', 'Помидоры, огурцы, болгарский перец, оливки, сыр фета', 300, 'Салаты'),
    ('Тёплый салат с говядиной', 'Обжаренные ломтики говядины с овощами и соусом терияки', 390, 'Салаты'),
    ('Салат с креветками', 'Креветки, салатные листья, авокадо, лимонная заправка', 420, 'Салаты'),

    -- Горячие блюда
    ('Стейк Нью-Йорк', 'Сочный стейк средней прожарки из говядины', 1200, 'Горячие блюда'),
    ('Бефстроганов', 'Говядина в сливочно-грибном соусе, подаётся с картофельным пюре', 590, 'Горячие блюда'),
    ('Куриная грудка в сливочном соусе', 'Запечённая куриная грудка с сыром и сливками', 450, 'Горячие блюда'),
    ('Говяжьи щёчки', 'Тушёные говяжьи щёчки в соусе демиглас, гарнир из овощей', 890, 'Горячие блюда'),

    -- Гриль-меню
    ('Стейк из лосося', 'Филе лосося на гриле с лимоном и соусом тар-тар', 990, 'Гриль-меню'),
    ('Куриный шашлык', 'Маринованные куриные кусочки, обжаренные на гриле', 350, 'Гриль-меню'),
    ('Овощи на гриле', 'Кабачки, баклажаны, перец и лук, обжаренные на гриле', 280, 'Гриль-меню'),
    ('Рёбрышки BBQ', 'Свиныe рёбрышки, маринованные в соусе барбекю', 750, 'Гриль-меню'),

    -- Супы
    ('Борщ', 'Свекольный суп с говядиной и сметаной', 250, 'Супы'),
    ('Солянка сборная', 'Пикантный суп с копчёностями, маслинами и лимоном', 320, 'Супы'),
    ('Том Ям с креветками', 'Кисло-острый тайский суп с кокосовым молоком и креветками', 480, 'Супы'),
    ('Крем-суп из шампиньонов', 'Нежный сливочный суп с грибами и сухариками', 290, 'Супы'),

    -- Десерты
    ('Тирамису', 'Классический итальянский десерт с маскарпоне и кофе', 350, 'Десерты'),
    ('Чизкейк Нью-Йорк', 'Воздушный сырный торт на песочной основе', 370, 'Десерты'),
    ('Шоколадный фондан', 'Тёплый шоколадный пирожок с жидкой начинкой', 390, 'Десерты'),
    ('Медовик', 'Слоёный торт с мёдом и сметанным кремом', 300, 'Десерты'),

    -- Напитки
    ('Эспрессо', 'Крепкий чёрный кофе', 120, 'Напитки'),
    ('Капучино', 'Эспрессо с молочной пеной', 150, 'Напитки'),
    ('Зелёный чай', 'Листовой зелёный чай', 100, 'Напитки'),
    ('Мохито безалкогольный', 'Освежающий напиток с лаймом, мятой и содовой', 200, 'Напитки'),
    ('Домашний лимонад', 'Лимонный напиток с мятой и небольшим количеством сахара', 180, 'Напитки');


-- Вставка ингредиентов в таблицу all_items
INSERT INTO all_items (item_name, product_type) VALUES
('Моцарелла', 'Молочные продукты'),
('Горгонзола', 'Молочные продукты'),
('Пармезан', 'Молочные продукты'),
('Эмменталь', 'Молочные продукты'),
('Тесто для пиццы', 'Бакалея'),
('Орегано', 'Специи'),
('Пепперони', 'Мясо'),
('Соус чили', 'Соусы'),
('Сыр моцарелла', 'Молочные продукты'),
('Спагетти', 'Бакалея'),
('Чёрный перец', 'Специи'),
('Листы лазаньи', 'Бакалея'),
('Фарш (смешанный говядина и свинина)', 'Мясо'),
('Томатный соус', 'Бакалея'),
('Соус бешамель', 'Молочные продукты'),
('Сыр моцарелла', 'Молочные продукты'),
('Пармезан', 'Молочные продукты'),
('Белые грибы', 'Овощи'),
('Рис арборио', 'Бакалея'),
('Сливки', 'Молочные продукты'),
('Соевый соус', 'Бакалея'),
('Рис для суши', 'Бакалея'),
('Икра тобико', 'Бакалея'),
('Лосось (слабосолёный)', 'Рыба'),
('Авокадо', 'Овощи'),
('Тунец (свежий)', 'Рыба'),
('Зелёный лук', 'Овощи'),
('Яйцо', 'Молочные продукты'),
('Куриное филе', 'Мясо'),
('Пшеничная лапша', 'Бакалея'),
('Яйца', 'Яйца'),
('Ветчина', 'Мясо'),
('Сыр твёрдый (например, Чеддер)', 'Молочные продукты'),
('Творог', 'Молочные продукты'),
('Мука', 'Бакалея'),
('Сметана', 'Молочные продукты'),
('Сахар', 'Бакалея'),
('Мёд', 'Бакалея'),
('Бекон', 'Мясо'),
('Овсяные хлопья', 'Бакалея'),
('Ягоды', 'Овощи'),
('Листья романо', 'Овощи'),
('Сухарики', 'Бакалея'),
('Соус Цезарь', 'Соусы'),
('Оливки', 'Овощи'),
('Сыр фета', 'Молочные продукты'),
('Соус терияки', 'Соусы'),
('Лимон', 'Овощи'),
('Соус тар-тар', 'Соусы'),
('Специи для маринада', 'Специи'),
('Картофель', 'Овощи'),
('Соус демиглас', 'Соусы'),
('Морковь', 'Овощи'),
('Сельдерей', 'Овощи'),
('Баклажаны', 'Овощи'),
('Перец', 'Овощи'),
('Рёбрышки (свинина)', 'Мясо'),
('Свекла', 'Овощи'),
('Копчёности', 'Мясо'),
('Маслины', 'Овощи'),
('Кокосовое молоко', 'Молочные продукты'),
('Шампиньоны', 'Грибы'),
('Сухарики', 'Бакалея'),
('Маскарпоне', 'Молочные продукты'),
('Кофе', 'Бакалея'),
('Песочное тесто', 'Бакалея'),
('Шоколад', 'Кондитерские изделия'),
('Медовый соус', 'Бакалея'),
('Сметанный крем', 'Молочные продукты'),
('Кофе эспрессо', 'Бакалея'),
('Молоко', 'Молочные продукты'),
('Мята', 'Овощи'),
('Содовая', 'Напитки'),
('Сахар', 'Бакалея'),
('Лимон', 'Овощи');


INSERT INTO stock (item_id, amount) VALUES
(1, 1000),  -- Моцарелла
(2, 500),   -- Горгонзола
(3, 50),   -- Пармезан
(4, 200),   -- Эмменталь
(5, 200),  -- Тесто для пиццы
(6, 100),   -- Орегано
(7, 500),   -- Пепперони
(8, 200),    -- Соус чили
(9, 1000),  -- Сыр моцарелла
(10, 1500), -- Спагетти
(11, 50000), -- Чёрный перец
(12, 500),  -- Листы лазаньи
(13, 2000), -- Фарш (смешанный говядина и свинина)
(14, 1000),  -- Томатный соус
(15, 1000),  -- Соус бешамель
(16, 800),  -- Сыр моцарелла
(17, 500),  -- Пармезан
(18, 500),  -- Белые грибы
(19, 1000), -- Рис арборио
(20, 500),   -- Сливки
(21, 500),   -- Соевый соус
(22, 1000), -- Рис для суши
(23, 100),  -- Икра тобико
(24, 200),  -- Лосось (слабосолёный)
(25, 10000),-- Авокадо
(26, 500),  -- Тунец (свежий)
(27, 500),  -- Зелёный лук
(28, 1000),-- Яйцо
(29, 1000), -- Куриное филе
(30, 1000), -- Пшеничная лапша
(31, 1000),-- Яйца
(32, 500),  -- Ветчина
(33, 1000), -- Сыр твёрдый (например, Чеддер)
(34, 500),  -- Творог
(35, 1500), -- Мука
(36, 500),  -- Сметана
(37, 500),  -- Сахар
(38, 200),  -- Мёд
(39, 300),  -- Бекон
(40, 1000), -- Овсяные хлопья
(41, 500),  -- Ягоды (например, клубника или черника)
(42, 1000), -- Листья романо
(43, 500),  -- Сухарики
(44, 200),   -- Соус Цезарь
(45, 300),  -- Оливки
(46, 500),  -- Сыр фета
(47, 200),   -- Соус терияки
(48, 1000), -- Лимон
(49, 100),   -- Соус тар-тар
(50, 200),  -- Специи для маринада
(51, 1500), -- Картофель
(52, 500),   -- Соус демиглас
(53, 500),  -- Морковь
(54, 500),  -- Сельдерей
(55, 500),  -- Баклажаны
(56, 500),  -- Перец
(57, 500),  -- Рёбрышки (свинина)
(58, 500),  -- Свекла
(59, 200),  -- Копчёности
(60, 500),  -- Маслины
(61, 500),   -- Кокосовое молоко
(62, 500),  -- Шампиньоны
(63, 500),  -- Сухарики
(64, 1000), -- Маскарпоне
(65, 200),  -- Кофе
(66, 1000), -- Песочное тесто
(67, 500),  -- Шоколад
(68, 200),  -- Мёд
(69, 1000), -- Сметанный крем
(70, 200),  -- Кофе эспрессо
(71, 500),   -- Молоко
(72, 100),  -- Мята
(73, 500),   -- Содовая
(74, 500),  -- Сахар
(75, 1000); -- Лимон


INSERT INTO recipe (menu_id, item_id, amount) VALUES
(1, 1, 2),  -- Моцарелла
(1, 2, 1),  -- Горгонзола
(1, 3, 1),  -- Пармезан
(1, 4, 1),  -- Эмменталь
(1, 5, 1),  -- Тесто для пиццы
(2, 7, 5),   -- Пепперони
(2, 8, 3),  -- Соус чили
(2, 9, 2),  -- Сыр моцарелла
(2, 5, 1),   -- Тесто для пиццы
(3, 10, 2),  -- Спагетти
(3, 13, 1),  -- Фарш (смешанный говядина и свинина)
(3, 20, 5),  -- Сливки
(3, 11, 5),    -- Чёрный перец
(4, 12, 4),    -- Листы лазаньи
(4, 13, 15),   -- Фарш (смешанный говядина и свинина)
(4, 14, 10),  -- Томатный соус
(4, 15, 10),  -- Соус бешамель
(4, 16, 10),   -- Сыр моцарелла
(4, 17, 5),    -- Пармезан
(5, 18, 10),   -- Белые грибы
(5, 19, 20),   -- Рис арборио
(5, 20, 5),   -- Сливки
(5, 17, 5),    -- Пармезан
(6, 22, 10),   -- Рис для суши
(6, 23, 3),    -- Икра тобико
(6, 24, 5),    -- Лосось (слабосолёный)
(6, 25, 1),    -- Авокадо
(6, 9, 3),     -- Сыр моцарелла
(7, 22, 10),   -- Рис для суши
(7, 24, 5),    -- Лосось (слабосолёный)
(7, 64, 3),    -- Маскарпоне
(7, 25, 1),    -- Авокадо
(8, 26, 5),   -- Тунец (свежий)
(8, 22, 8),    -- Рис для суши
(9, 24, 5),   -- Лосось (слабосолёный)
(9, 22, 8),    -- Рис для суши
(10, 29, 10),  -- Куриное филе
(10, 30, 150),  -- Пшеничная лапша
(10, 28, 1),   -- Яйцо
(11, 32, 50),   -- Ветчина
(11, 33, 30),   -- Сыр твёрдый (например, Чеддер)
(11, 31, 2),   -- Яйца
(12, 34, 150),   -- Творог
(12, 35, 10),   -- Мука
(13, 34, 20),   -- Творог
(13, 36, 5),    -- Сметана
(14, 40, 100),   -- Овсяные хлопья
(14, 41, 30),    -- Ягоды (например, клубника или черника)
(15, 39, 5),    -- Бекон
(15, 31, 2),    -- Яйца
(16, 42, 10),   -- Листья романо
(16, 29, 100),   -- Куриное филе
(16, 43, 50),    -- Сухарики
(16, 44, 30),   -- Соус Цезарь
(16, 17, 30),    -- Пармезан
(17, 45, 50),    -- Оливки
(17, 46, 10),   -- Сыр фета
(17, 56, 10),   -- Перец
(17, 41, 50),    -- Ягоды (например, клубника или черника)
(17, 42, 10),   -- Листья романо
(18, 13, 10),   -- Фарш (смешанный говядина и свинина)
(18, 53, 5),    -- Морковь
(18, 54, 50),    -- Сельдерей
(18, 47, 3),   -- Соус терияки
(19, 59, 100),   -- Копчёности
(19, 42, 10),   -- Листья романо
(19, 25, 1),    -- Авокадо
(19, 48, 30),   -- Лимон
(20, 13, 30),   -- Фарш (смешанный говядина и свинина)
(20, 17, 50),    -- Пармезан
(21, 13, 2),   -- Фарш (смешанный говядина и свинина)
(21, 62, 1),   -- Шампиньоны
(21, 20, 50),   -- Сливки
(21, 51, 10),   -- Картофель
(22, 29, 2),   -- Куриное филе
(22, 20, 50),   -- Сливки
(22, 36, 30),    -- Сметана
(23, 13, 3),   -- Фарш (смешанный говядина и свинина)
(23, 52, 1),  -- Соус демиглас
(23, 53, 5),    -- Морковь
(24, 24, 2),   -- Лосось (слабосолёный)
(24, 49, 3),   -- Соус тар-тар
(25, 29, 2),   -- Куриное филе
(25, 50, 10),    -- Специи для маринада
(26, 55, 1),   -- Баклажаны
(26, 56, 1),   -- Перец
(26, 53, 50),    -- Морковь
(27, 57, 3),   -- Рёбрышки (свинина)
(27, 48, 30),   -- Лимон
(28, 58, 2),   -- Свекла
(28, 13, 100),   -- Фарш (смешанный говядина и свинина)
(28, 36, 30),    -- Сметана
(29, 59, 1),   -- Копчёности
(29, 60, 50),    -- Маслины
(29, 75, 1),    -- Лимон
(30, 61, 1),  -- Кокосовое молоко
(30, 59, 1),   -- Копчёности
(30, 48, 30),   -- Лимон
(31, 62, 15),   -- Шампиньоны
(31, 20, 5),   -- Сливки
(31, 63, 30),    -- Сухарики
(32, 64, 15),   -- Маскарпоне
(32, 65, 3),   -- Кофе
(32, 37, 2),    -- Сахар
(33, 66, 2),   -- Песочное тесто
(33, 64, 15),   -- Маскарпоне
(33, 74, 30),    -- Сахар
(34, 67, 1),   -- Шоколад
(34, 20, 50),   -- Сливки
(35, 68, 1),   -- Мёд
(35, 69, 1),   -- Сметанный крем
(36, 70, 3),   -- Кофе эспрессо
(37, 70, 3),   -- Кофе эспрессо
(37, 71, 1),  -- Молоко 
(38, 73, 1),    -- Мята
(39, 73, 1),  -- Содовая
(39, 72, 1),    -- Мята
(40, 75, 1),    -- Лимон
(40, 72, 1);    -- Мята


INSERT INTO access_types (access_name, description) VALUES 
('ADMIN', 'Главный администратор'),
('COOK', 'Повар'),
('MANAGER', 'Административный персонал'),
('WAITER', 'Официант');


-- Пользователи
INSERT INTO users (username, password_hash, access_type_id) VALUES 
('admin', '$2a$10$Qo8.EEumW2qvyhLtSDyRcOahYigr3sDuEoKGMdZd5/iCgGNbIoP5i', 1),
('cook', '$2a$10$Pn7hzUOmBSF3xuluXjDDr.744eipB1GGCte/fR1mQIROQqgtgYafC', 2),
('manager', '$2a$10$Ox4f/ylHHIFilcDr5er86ON8lyXXONa4TLEMsLLfRTIg0PkAjn/fW', 3),
('waiter', '$2a$10$5vBSYm2PT7n8G4zKOXWv.OocrlRSg0bI1t5JgjAxf7hRbuO/Ju3c2', 4);


INSERT INTO orders (order_date, order_time, table_number, status) VALUES
('2025-03-01', '12:00:00', 2, 'Оплачен'),
('2025-03-01', '12:30:00', 0, 'Оплачен'),
('2025-03-01', '13:00:00', 0, 'Оплачен'),
('2025-03-02', '12:00:00', 4, 'Оплачен'),
('2025-03-02', '13:00:00', 5, 'Оплачен');

---- поменять на 6
INSERT INTO orders (order_date, order_time, table_number, status) VALUES
('2025-03-06', '12:00:00', 2, 'Оплачен'),
('2025-03-06', '12:30:00', 0, 'Завершен'),
('2025-03-06', '13:00:00', 5, 'Принят'),
('2025-03-06', '13:30:00', 1, 'Оплачен'),
('2025-03-06', '14:00:00', 4, 'Завершен'),
('2025-03-06', '14:30:00', 3, 'Принят');

INSERT INTO orders (order_date, order_time, table_number, status) VALUES
('2025-02-20', '12:00:00', 2, 'Оплачен'),
('2025-02-20', '12:30:00', 4, 'Оплачен'),
('2025-02-20', '13:00:00', 3, 'Оплачен'),
('2025-02-20', '13:30:00', 1, 'Оплачен'),
('2025-02-21', '12:00:00', 0, 'Оплачен'),
('2025-02-21', '12:30:00', 3, 'Оплачен'),
('2025-02-22', '13:00:00', 2, 'Оплачен'),
('2025-02-22', '13:30:00', 5, 'Оплачен');

-- Функция, которая обновляет total_amount в таблице orders
CREATE OR REPLACE FUNCTION update_total_amount()
RETURNS TRIGGER AS $$
BEGIN
    -- Обновляем поле total_amount в таблице orders, увеличиваем его на цену блюда
    UPDATE orders
    SET total_amount = total_amount + (SELECT price FROM menu WHERE menu_id = NEW.menu_id)
    WHERE order_id = NEW.order_id;
    
    -- Возвращаем NEW для вставки данных в order_items
    RETURN NEW;
END;
$$ LANGUAGE plpgsql;

-- Триггер, который вызывает функцию после вставки записи в таблицу order_items
CREATE TRIGGER trigger_update_total_amount
AFTER INSERT ON order_items
FOR EACH ROW
EXECUTE FUNCTION update_total_amount();


INSERT INTO order_items (order_id, menu_id) VALUES
(1, 3),
(1, 24),
(1, 11),

(2, 18),
(2, 6),
(2, 23),
(2, 5),
(2, 36),

(3, 29),
(3, 10),
(3, 38),

(4, 7),
(4, 34),

(5, 19),

(6, 15),
(6, 31),
(6, 33),
(6, 27),
(6, 12),

(7, 24),

(8, 22),
(8, 7),

(9, 13),
(9, 11),
(9, 9),

(10, 21),
(10, 33),
(10, 3),
(10, 11),
(10, 39),
(10, 38),

(11, 1),
(11, 5),
(11, 2),
(11, 33),
(11, 12),
(11, 15),

(12, 34),
(12, 26),
(12, 28),

(13, 3),

(14, 13),
(14, 39),
(14, 31),
(14, 29),
(14, 14),
(14, 20),
(14, 8),

(15, 10),

(16, 12),
(16, 40),

(17, 31),
(17, 17),
(17, 14),

(18, 30),
(18, 25),
(18, 17),

(19, 6),
(19, 35);


INSERT INTO reservations (reservation_date, reservation_time, name, phone_number, table_id) VALUES
('2025-03-01', '12:00:00', 'Иван Иванов', '89991234567', 2),
('2025-03-01', '13:00:00', 'Мария Петрова', '89993456789', 0),
('2025-03-01', '14:00:00', 'Алексей Сидоров', '89994567890', 2),
('2025-03-11', '15:00:00', 'Екатерина Смирнова', '89995678901', 5),
('2025-03-02', '12:00:00', 'Дмитрий Кузнецов', '89996789012', 4),
('2025-03-12', '13:00:00', 'Светлана Коваленко', '89997890123', 3),
('2025-03-02', '14:00:00', 'Константин Морозов', '89998901234', 5),
('2025-03-03', '12:00:00', 'Ольга Иванова', '89999012345', 1),
('2025-03-03', '13:00:00', 'Григорий Федоров', '89990123456', 2),
('2025-03-13', '14:00:00', 'Юлия Волкова', '89991234567', 4);

--- поменять на 6
INSERT INTO reservations (reservation_date, reservation_time, name, phone_number, table_id) VALUES
('2025-03-06', '12:00:00', 'Иван Иванов', '89991234567', 2),
('2025-03-06', '13:00:00', 'Анна Павлова', '89992345678', 0),
('2025-03-06', '14:00:00', 'Андрей Сидоров', '89993456789', 5),
('2025-03-06', '15:00:00', 'Марина Белова', '89994567890', 1),
('2025-03-06', '16:00:00', 'Петр Васильев', '89995678901', 3),
('2025-03-06', '17:00:00', 'Елена Коваленко', '89996789012', 4);

INSERT INTO reservations (reservation_date, reservation_time, name, phone_number, table_id) VALUES
('2025-02-20', '12:00:00', 'Евгений Никифоров', '89991234567', 2),
('2025-02-20', '13:00:00', 'Сергей Кузнецов', '89992345678', 3),
('2025-02-20', '14:00:00', 'Дарина Власова', '89993456789', 4),
('2025-02-21', '12:00:00', 'Роман Петров', '89994567890', 5),
('2025-02-21', '13:00:00', 'Александр Смирнов', '89995678901', 1),
('2025-02-22', '12:00:00', 'Ксения Михайлова', '89996789012', 2),
('2025-02-22', '13:00:00', 'Никита Коваленко', '89997890123', 0),
('2025-02-23', '14:00:00', 'Михаил Беляев', '89998901234', 3);


INSERT INTO services (service_name, description) VALUES
('Персональный официант', 'Обслуживание гостей отдельным официантом для более комфортного и персонализированного опыта.'),
('Сомелье', 'Предложение сомелье для помощи в выборе напитков и вин для ваших блюд.'),
('Торт на заказ', 'Возможность заказать индивидуальный торт или десерт для мероприятия или праздника.'),
('Цветы на столе', 'Оформление стола живыми цветами для создания романтической или торжественной атмосферы.'),
('Музыкальное сопровождение', 'Живое музыкальное сопровождение или диджей на ваш выбор для создания нужной атмосферы.');


INSERT INTO reserved_services (reservation_id, service_id) VALUES
(3, 2),
(3, 4),
(3, 5),
(4, 5),
(4, 3),
(6, 1),
(8, 1),
(8, 2),
(8, 4),
(9, 1),
(9, 5),
(11, 3),
(15, 2),
(15, 4),
(16, 1),
(17, 1),
(17, 2),
(17, 3),
(17, 4),
(17, 5),
(18, 2),
(20, 2),
(20, 4),
(21, 3),
(22, 3),
(23, 5);

-- Создаем функцию, которая будет обновлять запасы на складе
CREATE OR REPLACE FUNCTION update_stock_amount()
RETURNS TRIGGER AS $$
DECLARE
    recipe_record RECORD;
    stock_record RECORD;
    required_amount NUMERIC(10, 2);
BEGIN
    -- Для каждого рецепта, связанного с заказом, проверяем наличие на складе
    FOR recipe_record IN 
        SELECT * FROM recipe WHERE menu_id = NEW.menu_id
    LOOP
        -- Получаем информацию о складе для данного ингредиента
        SELECT * INTO stock_record FROM stock WHERE item_id = recipe_record.item_id;
        
        -- Если ингредиент есть на складе
        IF FOUND THEN
            required_amount := recipe_record.amount;
            
            -- Проверяем, что на складе достаточно ингредиента
            IF stock_record.amount < required_amount THEN
                RAISE EXCEPTION 'Недостаточно ингредиента на складе: %', stock_record.item_id;
            END IF;

            -- Обновляем количество на складе
            UPDATE stock
            SET amount = amount - required_amount
            WHERE item_id = recipe_record.item_id;
        ELSE
            RAISE EXCEPTION 'Ингредиент % отсутствует на складе', recipe_record.item_id;
        END IF;
    END LOOP;

    RETURN NEW;
END;
$$ LANGUAGE plpgsql;

-- Создаем триггер, который будет вызываться после добавления записи в таблицу order_items
CREATE TRIGGER trigger_update_stock_amount
AFTER INSERT ON order_items
FOR EACH ROW
EXECUTE FUNCTION update_stock_amount();

